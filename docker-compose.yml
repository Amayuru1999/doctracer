version: '3.8'

services:
  neo4j:
    image: neo4j:5.15
    container_name: doctracer-neo4j
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/password123
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=2G
      - NEO4J_dbms_memory_pagecache_size=1G
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_conf:/var/lib/neo4j/conf
      - ./conf/neo4j.conf:/var/lib/neo4j/conf/neo4j.conf:ro
    networks:
      - doctracer-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "password123", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: doctracer-backend
    ports:
      - "5000:5000"
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password123
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - FLASK_APP=doctracer
    volumes:
      - ./data:/app/data
      - ./output:/app/output
      - ./doctracer:/app/doctracer
    networks:
      - doctracer-network
    depends_on:
      neo4j:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  web-visualizer:
    build:
      context: ./backend/web_visualizer
      dockerfile: Dockerfile
    container_name: doctracer-web-visualizer
    ports:
      - "5001:5001"
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password123
      - FLASK_HOST=0.0.0.0
      - FLASK_PORT=5001
      - FLASK_DEBUG=1
    volumes:
      - ./data:/app/data:ro
      - ./output:/app/output:ro
    networks:
      - doctracer-network
    depends_on:
      neo4j:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: doctracer-frontend
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:5000
      - VITE_APP_TITLE=DocTracer
      - VITE_DEV_MODE=true
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    networks:
      - doctracer-network
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_import:
    driver: local
  neo4j_conf:
    driver: local

networks:
  doctracer-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
