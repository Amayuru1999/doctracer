version: '3.8'

services:
  neo4j:
    image: neo4j:5.15
    container_name: doctracer-neo4j
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/password123
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=2G
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - ./conf/neo4j.conf:/var/lib/neo4j/conf/neo4j.conf:ro
    networks:
      - doctracer-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "password123", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  backend:
    build: 
      context: .
      dockerfile: Dockerfile.backend
    container_name: doctracer-backend
    ports:
      - "5000:5000"
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password123
      - FLASK_ENV=production
      - FLASK_DEBUG=0
    volumes:
      - ./data:/app/data:ro
      - ./output:/app/output:ro
    networks:
      - doctracer-network
    depends_on:
      neo4j:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/gazettes"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: doctracer-frontend
    ports:
      - "80:80"
    environment:
      - VITE_API_URL=http://localhost:5000
    networks:
      - doctracer-network
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  neo4j_data:
  neo4j_logs:
  neo4j_import:

networks:
  doctracer-network:
    driver: bridge