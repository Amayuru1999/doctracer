version: '3.8'

services:
  neo4j:
    image: neo4j:5.15
    container_name: doctracer-neo4j-prod
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/${NEO4J_PASSWORD:-secure_password_123}
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_memory_heap_initial__size=1G
      - NEO4J_dbms_memory_heap_max__size=4G
      - NEO4J_dbms_memory_pagecache_size=2G
      - NEO4J_dbms_query_cache_size=100
      - NEO4J_dbms_logs_query_enabled=true
      - NEO4J_dbms_logs_query_parameter_logging_enabled=true
    volumes:
      - neo4j_data_prod:/data
      - neo4j_logs_prod:/logs
      - neo4j_import_prod:/var/lib/neo4j/import
      - neo4j_conf_prod:/var/lib/neo4j/conf
      - ./conf/neo4j.prod.conf:/var/lib/neo4j/conf/neo4j.conf:ro
    networks:
      - doctracer-network-prod
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "${NEO4J_PASSWORD:-secure_password_123}", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 6G
          cpus: '2.0'
        reservations:
          memory: 4G
          cpus: '1.0'

  backend:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: doctracer-backend-prod
    ports:
      - "5000:5000"
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=${NEO4J_PASSWORD:-secure_password_123}
      - FLASK_ENV=production
      - FLASK_DEBUG=0
      - FLASK_APP=doctracer
      - GUNICORN_WORKERS=4
      - GUNICORN_TIMEOUT=120
    volumes:
      - ./data:/app/data:ro
      - ./output:/app/output
      - backend_logs:/app/logs
    networks:
      - doctracer-network-prod
    depends_on:
      neo4j:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  web-visualizer:
    build:
      context: ./backend/web_visualizer
      dockerfile: Dockerfile
    container_name: doctracer-web-visualizer-prod
    ports:
      - "5001:5001"
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=${NEO4J_PASSWORD:-secure_password_123}
      - FLASK_HOST=0.0.0.0
      - FLASK_PORT=5001
      - FLASK_DEBUG=0
      - FLASK_ENV=production
    volumes:
      - ./data:/app/data:ro
      - ./output:/app/output:ro
      - web_visualizer_logs:/app/logs
    networks:
      - doctracer-network-prod
    depends_on:
      neo4j:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: doctracer-frontend-prod
    ports:
      - "80:80"
      - "443:443"
    environment:
      - VITE_API_URL=${API_URL:-http://localhost:5000}
      - VITE_APP_TITLE=DocTracer
      - VITE_DEV_MODE=false
    volumes:
      - frontend_assets:/app/dist
      - ./ssl:/app/ssl:ro
    networks:
      - doctracer-network-prod
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  nginx:
    image: nginx:alpine
    container_name: doctracer-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - frontend_assets:/var/www/html
    networks:
      - doctracer-network-prod
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  neo4j_data_prod:
    driver: local
  neo4j_logs_prod:
    driver: local
  neo4j_import_prod:
    driver: local
  neo4j_conf_prod:
    driver: local
  backend_logs:
    driver: local
  web_visualizer_logs:
    driver: local
  frontend_assets:
    driver: local

networks:
  doctracer-network-prod:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16
