services:
  neo4j:
    image: neo4j:5.15
    container_name: doctracer-neo4j-prod
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=${NEO4J_USER}/${NEO4J_PASSWORD}
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_memory_heap_initial__size=1G
      - NEO4J_dbms_memory_heap_max__size=4G
      - NEO4J_dbms_memory_pagecache_size=2G
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
    networks:
      - doctracer-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "${NEO4J_USER}", "-p", "${NEO4J_PASSWORD}", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  backend:
    build: 
      context: .
      dockerfile: Dockerfile.backend
    container_name: doctracer-backend-prod
    ports:
      - "5001:5000"
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=${NEO4J_USER}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - FLASK_ENV=production
      - FLASK_DEBUG=0
    volumes:
      - ./data:/app/data:ro
      - ./output:/app/output:ro
    networks:
      - doctracer-network
    depends_on:
      neo4j:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/gazettes"]
      interval: 30s
      timeout: 10s
      retries: 3



  data-loader:
    build: 
      context: .
      dockerfile: Dockerfile.backend
    container_name: doctracer-data-loader-prod
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=${NEO4J_USER}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - PYTHONPATH=/app
    volumes:
      - ./output:/app/output:ro
    networks:
      - doctracer-network
    depends_on:
      neo4j:
        condition: service_healthy
    restart: "no"
    command: >
      sh -c "
        echo 'Waiting for Neo4j to be ready...' &&
        sleep 10 &&
        echo 'Loading complete gazette data (base + amendments)...' &&
        python /app/complete_data_loader.py /app/output/base /app/output/amendment &&
        echo 'Complete data loading finished!'
      "

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: ${API_URL:-http://localhost:5001}
    container_name: doctracer-frontend-prod
    ports:
      - "80:80"
      - "443:443"
    networks:
      - doctracer-network
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  neo4j_data:
  neo4j_logs:
  neo4j_import:

networks:
  doctracer-network:
    driver: bridge